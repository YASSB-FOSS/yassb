{
  // Place your landing workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "YASSB component": {
    "scope": "html,txt,markdown,javascript,typescript,handlebars",
    "prefix": "y-componeent",
    "body": [
      "<!-- component=\"$1\" -->"
    ],
    "description": "Inserts a YASSB directive for compenents"
  },
  "YASSB data source": {
    "scope": "html,txt,markdown,javascript,typescript,handlebars",
    "prefix": "y-data-source",
    "body": [
      "<!-- create-from-data-source=\"$1.json\" renderer=\"$2\" -->"
    ],
    "description": "Inserts a YASSB directive for creating DOM elements from a JSON data source file"
  },
  "YASSB data source-template": {
    "scope": "json",
    "prefix": "y-data-source-template",
    "body": [
      "[\n  \n]"
    ],
    "description": "Creates the basic structure of data source to be used by YASSB' directive for creating DOM elements from a JSON data source file"
  },
  "YASSB html from md files": {
    "scope": "html,txt,markdown,javascript,typescript,handlebars",
    "prefix": "y-generate-from-files",
    "body": [
      "<!-- generate-from-files=\"$1\" -->"
    ],
    "description": "Inserts a YASSB directive for creating new pages based on a template per each .md file found at the given dir"
  },
  "YASSB list files": {
    "scope": "html,txt,markdown,javascript,typescript,handlebars",
    "prefix": "y-public-file-list",
    "body": [
      "<!-- public-file-list=\"$1\" renderer=\"$2\" -->"
    ],
    "description": "Inserts a YASSB directive for creating a list of files at the provided dir in the public folder with the specified renderer function"
  },
  "YASSB include script src": {
    "scope": "html,txt,markdown,javascript,typescript,handlebars",
    "prefix": "y-include-script-src",
    "body": [
      "<!-- include-script-src -->"
    ],
    "description": "Inserts a YASSB directive for creating a src reference to the scripts file"
  },
  "YASSB include styles src": {
    "scope": "html,txt,markdown,javascript,typescript,handlebars",
    "prefix": "y-include-styles-src",
    "body": [
      "<!-- include-styles-src -->"
    ],
    "description": "Inserts a YASSB directive for creating a src reference to the styles file"
  },
  "URL to": {
    "scope": "html,txt,markdown,javascript,typescript,handlebars",
    "prefix": "y-url-to",
    "body": [
      "{{url-to=\"$1\"}}"
    ],
    "description": "Inserts the full url based on the url fragment provided"
  },
  "YassbDirectiveClass": {
    "scope": "typescript",
    "prefix": "y-directive-class",
    "body": [
      "import { YassbBaseDirective } from '@yassb/directives/yassb-base-directive.class';",
      "import { YassbDirective, YassbDirectiveProps, YassbDirectiveResponse } from '@yassb/yassb';\n",
      "export class $1 extends YassbBaseDirective implements YassbDirective {\n",
      "  /**",
      "   * Regex to match the comments to invoke the directive",
      "   */",
      "  public static regex: RegExp = /<!-- $2 -->/g;\n",
      "  /**",
      "   * Creates an instance of the Class and calls `super` so YassbBaseDirective assigns the args to the protected properties.",
      "   * @param args",
      "   */",
      "  constructor(args: YassbDirectiveProps) {",
      "    super(args);",
      "  }\n",
      "  /**",
      "   * Inits the directive and $3.",
      "   * @returns init ",
      "   */",
      "  public init(): YassbDirectiveResponse {",
      "    $4",
      "    return { html: this.fileContents, data: {} };",
      "  }\n",
      "}\n"
    ],
    "description": "A YASSB Directive structure with all nedded initializations."
  }
}